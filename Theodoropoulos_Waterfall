Requirements Definition:
•	Database of users: should work for 100 students, 10 instructors, and 1 administrator.
•	Database of courses: will contain course information such as the CRN, course name, times, instructor, prerequisite courses, corequisite courses.
•	3 types of users: student, instructor, administrator
•	Student: see schedule, add/drop courses, search courses
•	Instructor: see schedule, see class list, search courses
•	Administrator: add/remove courses, add/remove users, add/remove student from a course, search class lists, search courses
Make sure the above requirements cover all necessary functionality of the program.

System and Software Design
Decide how the 3 types of users are connected, and how administrators will have access to instructors, instructors to students, and administrators to students.
•	Columns on database of users: type of user, first name, last name, phone number, WIT number, email address
•	Special columns for students: major, graduation year

Implementation and Unit Testing
Write code for all classes and create a database for testing. Make sure all parts work for different test cases and common mistakes that users might make (e.g. student trying to register for wrong course).

System Testing and Integration
Write code to link all classes together and use polymorphism and inheritance. Test the program for many cases and make sure all classes interact correctly with each other.

Operation and Maintenance
Let some users test the program (Professor Rawlins and maybe some students from the class) and implement any changes they think are necessary.
